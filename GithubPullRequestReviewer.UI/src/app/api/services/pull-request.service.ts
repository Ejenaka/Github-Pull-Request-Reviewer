/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Json } from '../fn/pull-request/api-pull-request-repositories-repository-id-pull-requests-get-json';
import { ApiPullRequestRepositoriesRepositoryIdPullRequestsGet$Json$Params } from '../fn/pull-request/api-pull-request-repositories-repository-id-pull-requests-get-json';
import { apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Plain } from '../fn/pull-request/api-pull-request-repositories-repository-id-pull-requests-get-plain';
import { ApiPullRequestRepositoriesRepositoryIdPullRequestsGet$Plain$Params } from '../fn/pull-request/api-pull-request-repositories-repository-id-pull-requests-get-plain';
import { apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Json } from '../fn/pull-request/api-pull-request-repositories-repository-id-pull-requests-pull-request-number-diff-get-json';
import { ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Json$Params } from '../fn/pull-request/api-pull-request-repositories-repository-id-pull-requests-pull-request-number-diff-get-json';
import { apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Plain } from '../fn/pull-request/api-pull-request-repositories-repository-id-pull-requests-pull-request-number-diff-get-plain';
import { ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Plain$Params } from '../fn/pull-request/api-pull-request-repositories-repository-id-pull-requests-pull-request-number-diff-get-plain';
import { apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Json } from '../fn/pull-request/api-pull-request-repositories-repository-id-pull-requests-pull-request-number-get-json';
import { ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Json$Params } from '../fn/pull-request/api-pull-request-repositories-repository-id-pull-requests-pull-request-number-get-json';
import { apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Plain } from '../fn/pull-request/api-pull-request-repositories-repository-id-pull-requests-pull-request-number-get-plain';
import { ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Plain$Params } from '../fn/pull-request/api-pull-request-repositories-repository-id-pull-requests-pull-request-number-get-plain';
import { PullRequest } from '../models/pull-request';

@Injectable({ providedIn: 'root' })
export class PullRequestService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet()` */
  static readonly ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGetPath = '/api/PullRequest/repositories/{repositoryId}/pull-requests/{pullRequestNumber}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Plain$Response(params: ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<PullRequest>> {
    return apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Plain(params: ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Plain$Params, context?: HttpContext): Observable<PullRequest> {
    return this.apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<PullRequest>): PullRequest => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Json$Response(params: ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<PullRequest>> {
    return apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Json(params: ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Json$Params, context?: HttpContext): Observable<PullRequest> {
    return this.apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<PullRequest>): PullRequest => r.body)
    );
  }

  /** Path part for operation `apiPullRequestRepositoriesRepositoryIdPullRequestsGet()` */
  static readonly ApiPullRequestRepositoriesRepositoryIdPullRequestsGetPath = '/api/PullRequest/repositories/{repositoryId}/pull-requests';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Plain$Response(params: ApiPullRequestRepositoriesRepositoryIdPullRequestsGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<PullRequest>>> {
    return apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Plain(params: ApiPullRequestRepositoriesRepositoryIdPullRequestsGet$Plain$Params, context?: HttpContext): Observable<Array<PullRequest>> {
    return this.apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<PullRequest>>): Array<PullRequest> => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Json$Response(params: ApiPullRequestRepositoriesRepositoryIdPullRequestsGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<PullRequest>>> {
    return apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Json(params: ApiPullRequestRepositoriesRepositoryIdPullRequestsGet$Json$Params, context?: HttpContext): Observable<Array<PullRequest>> {
    return this.apiPullRequestRepositoriesRepositoryIdPullRequestsGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<PullRequest>>): Array<PullRequest> => r.body)
    );
  }

  /** Path part for operation `apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet()` */
  static readonly ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGetPath = '/api/PullRequest/repositories/{repositoryId}/pull-requests/{pullRequestNumber}/diff';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Plain$Response(params: ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<string>> {
    return apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Plain(params: ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Plain$Params, context?: HttpContext): Observable<string> {
    return this.apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<string>): string => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Json$Response(params: ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<string>> {
    return apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Json(params: ApiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Json$Params, context?: HttpContext): Observable<string> {
    return this.apiPullRequestRepositoriesRepositoryIdPullRequestsPullRequestNumberDiffGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<string>): string => r.body)
    );
  }

}
